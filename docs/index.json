[
{
	"uri": "/",
	"title": "AWS Threat Detection LAB",
	"tags": [],
	"description": "",
	"content": " 본 실습 프로그램은 AWS의 보안 서비스를 이용하여 AWS 환경에서 발생할 수 있는 여러가지 보안 위협에 대한 탐지 및 분석에 대한 구성을 실습할 수 있도록 교재를 제공하는데 그 목표를 두고 있습니다.\n   메일로 문의   AWS 코리아 보안 관련 웹사이트  "
},
{
	"uri": "/post/module1.html",
	"title": "AWS 자원 삭제",
	"tags": [],
	"description": "",
	"content": " AWS 에서 제공해드리는 EventEngine 을 이용하여 실습을 진행하신 경우 별도로 자원을 삭제하지 않으셔도 실습에 사용된 AWS 자원은 자동으로 삭제됩니다. 수고하셨습니다!! "
},
{
	"uri": "/module.html",
	"title": "LAB Modules",
	"tags": [],
	"description": "",
	"content": " 본 AWS Treat Detection 실습은 아래의 각 절차에 따라 수행됩니다..\n  실습 개요\n 공격\n 방어\n 실습 구성 요소 삭제    메일로 문의   AWS 코리아 보안 관련 웹사이트  "
},
{
	"uri": "/attack/module1.html",
	"title": "공격 실행",
	"tags": [],
	"description": "",
	"content": "  이제 이전 단계에서 완성된 AWS 이용환경을 대상으로 해서 CloudFormation 을 이용하여 몇가지 공격을 시뮬레이션 해보도록 하겠습니다. 제공된 CloudFormation 을 실행하면 공격에 사용되는 EC2 생성과 함께 몇 가지 공격이 자동으로 실행되게 됩니다.\n 소요 시간  CloudFormation 템플릿의 내용을 살펴보고 실행하기 – 5 분 위협 탐지 및 확인 - 25 분  CloudFormation 을 실행하기 전에 CloudFormation Code 를 확인하고 싶으시면 여기를 클릭하시면 됩니다..\n CloudFormation 템플릿 실행  CloudFormation 템플릿을 실행하기 위해 Deploy to AWS 링크를 클릭합니다.\n   Region Deploy     Seoul     \u0026ldquo;Deploy to AWS\u0026rdquo; 를 클릭하면 브라우져에서 새로운 창이나 새로운 탭이 열리면서 CloudFormation 을 실행할 수 있는 AWS Console 화면으로 자동 접속되게 됩니다.  아래의 \u0026ldquo;스택 세부 정보 지정\u0026rdquo; 설정 화면에서 CloudFormation 스택의 이름을 확인하고(수정하셔도 됩니다.) \u0026ldquo;다음\u0026rdquo;을 클릭합니다.  \u0026ldquo;스택 생성\u0026rdquo; 버튼을 클릭하면 아래와 같은 화면이 나타나게 됩니다. Tag 값을 설정하시려면 원하는 Tag 값을 입력하시고 Tag 가 필요없는 경우 \u0026ldquo;다음\u0026rdquo; 버튼을 클릭합니다.  다음 화면에서 스택 생성을 위하여 사용된 템플릿의 설정값을 확인한 후 화면 하단에 있는 IAM 리소스 생성 권한 승인 항목을 체크한 후 \u0026ldquo;스택 생성\u0026rdquo; 버튼을 클릭합니다.  정상적으로 진행이 되는 경우 아래와 같이 스택의 상태가 \u0026ldquo;CREATE_COMPLETE)으로 되어 있는 것을 확인하실 수 있습니다.     아래는 두 번째 CloudFormation 을 이용한 리소스 생성 후의 아키텍쳐입니다.   "
},
{
	"uri": "/pre/module1.html",
	"title": "실습 안내",
	"tags": [],
	"description": "",
	"content": " AWS 는 여러분들의 클라우드 운영환경에서 발생할 수 있는 다양한 침해 사고와 보안 위협을 탐지하고 분석할 수 있는 다양한 서비스와 도구들을 제공하고 있습니다. 대표적으로 Amazon GuardDuty 와 Inspector 와 같은 서비스를 사용하시면 AWS 운영환경에서 발생할 수 있는 인스턴스의 침해나 AWS 계정의 침해 등을 탐지할 수 있으며 여러분들이 사용하시는 EC2 인스턴스의 보안 환경을 좀 더 안전하게 운영하실 수 있습니다. 또한, 이와 같은 AWS 보안 서비스를 다수의 계정 운영 환경에서 보다 효율적으로 모니터링하고 대응할 수 있도록 Security Hub 라는 서비스를 함께 제공하고 있습니다. Security Hub 는 AWS 에서 제공하는 보안 서비스 뿐만 아니라 여러분들이 사용하시는 3rd Party 보안 제품과의 통합도 지원하고 있으므로 다양한 보안 솔루션을 운영하는 환경이라면 더욱 더 효율적인 보안 서비스 통합 환경을 구성하실 수 있습니다.\n 본 실습은 서울 리전(Seoul, ap-northeast-2)에서 진행됩니다.\n  본 실습에서 사용된 CloudFormation 템플릿들은 실습에서 진행되는 환경을 위해 특별히 제작된 것으로, 운영환경에서 실행하지 않도록 주의합니다.\n • 본 실습에 사용될 AWS 서비스들은 다음과 같습니다. 각 서비스에 대한 자세한 내용은 서비스 이름에 걸린 링크를 클릭하시기 바랍니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- Amazon GuardDuty는 AWS 계정과 워크로드를 보호하기 위한 지능형 위협 탐지 및 지속적인 모니터링 서비스입니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- Amazon Inspector는 AWS상에서 운영되는 고객 애플리케이션 환경에 대해 보안과 규정 준수 수준을 향상시키기 위한 자동화된 보안 수준 점검 기능을 제공합니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- Amazon CloudWatch는 AWS 리소스와 AWS상의 고객 애플리케이션들을 모니터링하기 위해 메트릭 수집, 로그 파일 모니터링, 경보 설정, 변경에 대한 자동화된 대응 등의 기능을 제공합니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- AWS CloudTrail은 AWS 어카운트의 거버넌스, 컴플라이언스, 운영 및 리스크 감사 기능을 제공합니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- AWS Config는 AWS 리소스의 구성을 측정, 감사 및 평가하게 해주는 일종의 자산관리 기능을 제공하는 서비스입니다\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- AWS Lambda 를 사용하면 서버를 프로비저닝하거나 관리할 필요 없이 코드를 실행할 수 있습니다. 사용한 컴퓨팅 시간만큼만 비용을 지불하고, 코드가 실행되지 않을 때는 요금이 부과되지 않습니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- AWS CloudFormation 은 클라우드 환경 내 모든 인프라 리소스를 설명하고 프로비저닝할 수 있도록 공통 언어를 제공합니다. CloudFormation을 사용하면 간단한 텍스트 파일을 사용하여 자동화되고 안전한 방식으로 모든 리전과 계정에 걸쳐 애플리케이션에 필요한 모든 리소스를 모델링 및 프로비저닝할 수 있습니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- AWS IAM(Identity and Access Management) 를 사용하면 AWS 서비스와 리소스에 대한 액세스를 안전하게 관리할 수 있습니다. 또한, AWS 사용자 및 그룹을 만들고 관리하며, 권한을 사용해 AWS 리소스에 대한 액세스를 허용 및 거부할 수 있습니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- Amazon VPC(Virtual Private Cloud) 는 AWS 클라우드에서 논리적으로 격리된 공간을 프로비저닝하여 고객이 정의하는 가상 네트워크에서 AWS 리소스를 시작할 수 있게 해줍니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- Amazon S3 는 웹 사이트에서 모바일 앱, 기업 애플리케이션, IoT 센서나 디바이스의 데이터에 이르기까지 어디서나 원하는 양의 데이터를 저장하고 검색할 수 있도록 구축된 객체 스토리지입니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- Amazon SNS(Simple Notification Service) 는 유연한 완전 관리형 게시/구독 메시징 및 모바일 알림 서비스로서, 구독하고 있는 엔드포인트 및 클라이언트로 메시지를 전달하는 작업을 조정합니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- AWS System Manager 는 AWS 인프라에 대한 가시성과 제어를 제공합니다. Systems Manager는 통합된 사용자 인터페이스를 제공하므로 여러 AWS 서비스의 운영 데이터를 보고 AWS 리소스 전체에서 운영 작업을 자동화할 수 있습니다.\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- AWS SecurityHub 는 멀티 어카운트 환경에서 주요 보안 경보 및 규정 준수 상태에 대한 광범위하고 통합적인 뷰를 제공합니다. GuardDuty, Inspector, Macie 같은 AWS 보안 서비스뿐만 아니라 다른 파트너 제품과의 연동도 지원하며 각 서비스들이 탐지한 내역들에 대한 요약 및 통합 대쉬보드를 통해 상시 감사체계를 구축할 수 있도록 해줍니다.\n  아래는 이번 실습에 사용되는 서비스 간 아키텍쳐입니다.   "
},
{
	"uri": "/mitigation/module1.html",
	"title": "자격증명 침해",
	"tags": [],
	"description": "",
	"content": "  이번에는 이전 과정을 통해 실행된 공격을 AWS 보안 서비스를 이용하여 탐지하고 분석하는 내용을 다뤄보도록 하겠습니다.\n 소요 시간  침해된 AWS IAM 자격증명 – 25~40 분 침해된 EC2 Instance - 25~40 분 침해된 S3 버킷 - 15~25 분  이번 실습에서 실행된 공격은 여러분의 설정 실수나 관리 오류로 인하여 공격자가 웹서버의 접근 권한을 획득한 경우를 가정하고 있습니다. 여러분의 자격증명이나 EC2 인스턴스에 대한 접근 권한을 소유하고 있는 공격자가 발생한 다양한 악의적인 행위들은 여러분들이 활성화한 AWS 보안 서비스를 통하여 탐지되게 되며 여러분이 설정하였던 CloudWatch 이벤트 규칙이나 SNS 등을 통하여 경보를 수신할 수 있습니다.이런 경보들은 의심스러운 IP 주소와의 통신, 계정 정보 탈취를 위한 정찰활동, S3 버킷의 설정 변경등과 같은 내용을 담고 있습니다. 여러분들은 이러한 경보나 로그 등을 통하여 여러분들의 AWS 환경에 침입을 시도하는 침입자들의 접근 시도를 파악하고 해당 시도 차단을 위한 적절한 조치를 수행하여야하며 잘못된 설정이 있다면 해당 설정을 적절하여 수정하여 보다 안전한 AWS 운영환경을 구성하셔야 합니다.\n공격에 사용된 CloudFormation 실행 완료 후 이메일로 탐지 알람이 오기까지는 공격 패턴에 따라 15분 이상이 소요됩니다. 이전 과정들이 모두 정상적으로 완료되었다면 공격 알람 메일을 수신하는데 시간이 필요할 수 있으니 조금 기다려 주시기 바랍니다.\n 1 - 침해된 AWS IAM 자격 증명 탐지 및 분석 준비 여러분들인 첫번째 CloudFormation 에서 등록한 E-mail 로 여러가지 공격 탐지 경보 메일이 수신되고 있을것입니다. 여러가지 공격 탐지 경보 메일 중 AWS IAM Principal 과 관련한 경보 메일을 선택합니다.\n 아래의 탐지 내역을 포함하고 있는 경보 메일을 선택합니다. Amazon GuardDuty Finding : Recon:IAMUser/MaliciousIPCaller.Custom\n  메일 본문에 있는 를 복사합니다.   GuardDuty 에서 해당 Access Key 와 관련되어 있는 탐지 내역 분류 여러분들은 GuardDuty 에서 무엇인가를 탐지하여 경보를 발송했다는 것을 알게되었습니다. 이제 여러분들은 해당 경보와 관련한 보다 자세한 사항을 확인하기 위하여 GuardDuty 에 접속한 후 탐지되어 있ㅇ는 다양한 내역 중에서 해당 Access Key 와 관련된 내역만을 선별적으로 분류하는 작업을 하도록 하겠습니다.\n GuardDuty Console 화면으로 접속합니다.\n 이벤트 필터를 추가하기 위해서 \u0026ldquo;필터 추가\u0026rdquo; 라는 문구가 음영 처리되어 있는 검색창을 클릭합니다. 검색창을 클릭하면 사용 가능한 필터 리스트가 나타납니다.  사용 가능한 필터 리스트에서 \u0026ldquo;액세스 키 ID\u0026rdquo; 를 선택한 후 이전 과정에서 복사해두었던 액세스 키를 입력한 후 \u0026ldquo;적용\u0026rdquo; 버튼을 클릭합니다.  필터를 적용한 후 아래와 같이 특정 액세스 키와 관련한 탐지 내역만 별도로 필터링 되어 나타나는 것을 확인합니다. 각각의 탐지 내역을 클릭하여 상세 내역을 확인하도록 합니다.  탐지 상세 내역 정보 중 \u0026ldquo;해당 리소스\u0026rdquo; 부분에서 \u0026ldquo;User Type\u0026rdquo; 정보를 확인합니다. User Type 이 \u0026ldquo;AssumedRole\u0026rdquo; 로 되어 있는데 이것은 무엇을 의미할까요? 침해 유형을 분석할 때 User Type 을 확인하고 해당 Type 을 기반으로해서 분석과 대응 방안을 수립하는 것은 아주 중요합니다.\n  탐지 상세 내역 정보 중 \u0026ldquo;해당 리소스\u0026rdquo; 부분에서 \u0026ldquo;Principal ID\u0026rdquo; 정보를 확인합니다. Principal ID 부분의 정보는 콜론(:)으로 구분되어 있는 IAM Role 에 대한 고유값과 EC2 Instance ID 의 값의 형태입니다.\n예) AROA4M5UW2CWQQ6NXGLUI:i-0cd129013ab8d13cd\nPrincipal ID 는 API 호출에 사용되는 고유값을 포함하고 있습니다. 임시 보안 자격증명을 통해 API 호출이 발생하는 경우 Principal ID 는 session 명도 포함을 하고 있는데 이 탐지 내역의 경우 EC2 에 대한 IAM 역할을 이용해서 호출이 이뤄졌기 때문에 session 명으로 EC2 Instancd ID 가 사용되었습니다.\n  Principal ID 의 값을 복사합니다. \u0026ldquo;해당 리소스\u0026rdquo; 부분에서 \u0026ldquo;User Name\u0026rdquo; 을 확인한 후 그 값을 복사합니다. 이 값은 EC2 인스턴스에 할당되어 있던 IAM Role 의 이름으로 실제로 API 호출에 사용된 IAM Role 의 이름입니다.   대응 자 이제 여러분은 공격자가 공격에 사용한 EC2 인스턴스의 Role 과 공격자가 사용한 임시 보안 자격증명이 무엇인지 알아내었습니다. 이번에는 공격자가 해당 임시 보안 자격증명을 더이상 사용하지 못하도록 대응 조치를 수행하도록 하겠습니다.\nIAM Role 세션 종료  AWS IAM Console 로 접속합니다. 좌측의 메뉴에서 \u0026ldquo;역할\u0026rdquo;을 클릭합니다.  검색창에 조금전 복사해두었던 \u0026ldquo;User Name\u0026rdquo; 값을 붙여넣습니다.  요약화면에서 \u0026ldquo;세션 취소\u0026rdquo; 탭을 클릭한 후 붉은 버튼으로 되어있는 \u0026ldquo;활성 세션 취소\u0026rdquo; 를 클릭합니다. 확인창이 뜨면 체크박스를 체크한 후 \u0026ldquo;활성 세션 취소\u0026rdquo; 를 클릭합니다. 이제 공격자가 최초에 사용하였던 IAM Role 과 관련한 활성 세션은 모두 취소가 되었습니다. 즉, 공격자는 더이상 최초 세션을 이용하여 악의적인 행위를 수행할 수 없습니다. 하지만 새로운 활성 세션은 여전히 만들어 낼 수 있을 것입니다. 그럼 이번에는 무엇을 하여야할까요?\n   EC2 인스턴스의 Access Key 변경 이전 과정에서 진행한 \u0026ldquo;활성 세션 취소\u0026rdquo; 작업으로 인해 공격자가 사용하던 모든 활성 세션은 이용이 불가능해졌습니다. 하지만 이렇게 특정 IAM Role 에 대한 활성 세션을 취소하게 되면 해당 Role 을 사용하는 정상적인 어플리케이션 조차도 해당 활성 세션에서 사용하던 Access Key 를 사용할 수 없게 됩니다. 여러분들은 이런 작업이 서비스 측면에서는 영향도가 크지만 공격자로 인해 발생할 수 있는 리스크를 감안한다면 적절한 대응 조치를 확보한 상태에서 수행하셔야 합니다. 여러분들의 어플리케이션들이 사용할 새로운 Access Key 를 확보하기 위해서는 여러분들의 EC2 인스턴스를 중지/재시작 하는 작업이 필요합니다. 단순하게 \u0026ldquo;재부팅\u0026rdquo; 하는 것으로는 Access Key 가 변경되지 않습니다. 여러분들이 사용하시던 Access Key 의 만료시점이 가깝거나 만료 시간이 짧은 경우라면 새롭게 발급되는 Access Key 생성 시점까지 기다리는 것도 옵션이 될 수 있지만 빠른 재발급을 원한다면 중지/재시작이 반드시 필요합니다. 이 실습에서는 AWS Systems Manager 를 관리용으로 사용하고 있기 때문에 여러분들은 Systems Manager 에서 제공하는 Session Manager 를 통해 간단하게 EC2 인스턴스에 접속한 후 Access Key 가 재발급되는 것을 확인하실 수 있습니다.\n EC2 Console 에 접속합니다. threat-detection-wksp: Compromised Instance 라는 이름의 인스턴스를 선택한 후 \u0026ldquo;중지\u0026rdquo; 를 클릭합니다.  EC2 인스턴스 상태가 \u0026ldquo;Stopped\u0026rdquo; 되어 있는 것을 확인한 후 \u0026ldquo;시작\u0026rdquo; 을 클릭합니다.   Access Key 변경 확인  AWS Systems Manager Console 에 접속합니다. 좌측 화면에서 \u0026ldquo;Session Manager\u0026rdquo; 를 선택합니다.  우측 화면에서 \u0026ldquo;세션 시작\u0026rdquo; 버튼을 클릭한 후 threat-detection-wksp: Compromised Instance 라는 이름의 인스턴스를 선택한 후 \u0026ldquo;세션 시작\u0026rdquo; 을 클릭합니다.  세션이 시작되면 프롬프트 창에 아래의 CURL 명령어를 입력합니다.\ncurl http://169.254.169.254/latest/meta-data/iam/security-credentials/threat-detection-wksp-compromised-ec2  위의 CURL 명령은 EC2 인스턴스에 연결되어 있는 메타데이터 중 임시 자격 증명 정보를 호출하는 URL 입니다.\n  아래와 같은 CURL 명령에 대한 응답 중 AccesskeyId 값을 확인하여 이전 과정에서 적어두었던(활성 세션 취소 전에 적어두었던) Access Key 와 다른 것을 확인합니다.    "
},
{
	"uri": "/pre.html",
	"title": "실습 개요",
	"tags": [],
	"description": "",
	"content": " 이 실습은 AWS 보안 서비스에 익숙해지고 또한 이를 사용하여 AWS 환경의 위협을 식별하고 해결하는 방법을 배우도록 돕기 위해 마련되었습니다. 랩을 진행하면서 Amazon GuardDuty (위협 탐지), Amazon Inspector (취약성 및 행동 분석), AWS Security Hub (중앙 보안보기)와 같은 서비스를 사용하게됩니다. 이러한 서비스를 사용하여 공격 중 및 공격 후 위협을 조사하고, 알림 및 대응 파이프 라인을 설정하고, 추가 보안을 추가하여 환경의 보안 상태를 개선하는 방법을 배웁니다.\n  난이도 - 중간 소요 시간 - 1~2 시간 선수 과정 - AWS Account 의 이해, IAM 101  "
},
{
	"uri": "/mitigation/module2.html",
	"title": "인스턴스 침해",
	"tags": [],
	"description": "",
	"content": " 2 - 침해된 EC2 인스턴스 탐지 및 분석 준비 여러분들은 공격자가 사용하였던 임시보안자격증명을 어떻게 무력화하고 새로운 임시보안자격증명을 발급하여 사용할 수 있는지 학습하였습니다. 이번에는 공격자들이 어떻게 EC2 인스턴스를 침해할 수 있었는지 살펴보도록 하겠습니다. 공격자들은 EC2 인스턴스에 대한 메타데이터 접근 권한이 허용되어 있는 경우 상대적으로 손쉽게 자격증명들을 탈취할 수 있습니다.\n인스터스 ID 와 관련된 탐지 내역 분석 여러분들이 지난 과정에서 침해당한 IAM 자격증명에 대한 내용을 분석하였을 때 여러분들은 탐지 내역에 EC2 인스턴스 ID 정보가 포함된 Principal ID 와 IAM Role 에 대한 정보를 확인할 수 있었습니다. 이 중 인스턴스 ID 를 사용하면 Security Hub 에서 EC2 와 관련한 탐지 내역들을 선별적으로 분석하실 수 있습니다.\n이 과정에서의 분석은 GuardDuty 에 직접 접속해서 수행할 수도 있지만 Security Hub 를 이용한 통합 분석을 경험하는데 그 목적이 있습니다.\n  AWS Security Hub Console 에 접속합니다.\n 좌측의 \u0026ldquo;분석 결과\u0026rdquo; 메뉴를 클릭합니다.(위 링크를 클릭한 경우 \u0026ldquo;분석 결과\u0026rdquo; 메뉴로 자동접속 됩니다.)  검색창의 \u0026ldquo;필터 추가\u0026rdquo; 부분을 클릭한 후 \u0026ldquo;제품 이름\u0026rdquo; 을 선택한 후 입력창에 \u0026ldquo;GuardDuty\u0026rdquo; 를 입력하고 \u0026ldquo;Apply\u0026rdquo; 버튼을 클릭합니다.  브라우저의 검색 기능 (Control + F) 을 이용하여 이전 과정에서 Principal ID 에서 추출하여 저장해두었던 \u0026ldquo;인스턴스 ID\u0026rdquo; 를 검색합니다. 첫번째 매칭되는 검색항목의 \u0026ldquo;Resource ID\u0026rdquo; 에서 Amazon Resource Name(ARN) 을 복사합니다.  \u0026ldquo;필터 추가\u0026rdquo;를 클릭하여 Resource ID 필터를 하나 더 추가합니다. 조금전에 복사하였던 ARN 을 입력합니다.   Security Hub 를 통해 확인할 수 있는 다양한 탐지 내역들을 확인해보면 EC2 인스턴스가 허용되지 말아야할 IP 주소와 통신하고 있었다는 것을 알 수 있습니다. 또한, 외부의 특정 IP 에서 EC2 인스턴스로 SSH 에 대한 Brute Force 공격을 시도하였다는 것을 알 수 있는데요. 여러분들은 이제 해당 EC2 인스턴스에 대한 Brute Foce 공격이 성공하였는지 여부 등을 확인하여야 합니다.\nSSH 암호 인증이 활성화 되었는지 여부 확인(Security Hub) 자동화된 위협 대응은 여러가지 업무들을 가능하게 합니다. 예를 들어 보안 팀에서 특정 위협이 발생하였을 경우 수작업을 통해 진행하였어야하는 다양한 위협 탐지 관련 정보 수집 작업 등이 대표적일 수 있습니다. 간단한 방법의 하나로, GuardDuty 에서 특정 공격을 탐지했을 경우 CloudWatch 이벤트 규칙을 이용해서 EC2 인스턴스에 설치되어 있는 Inspector 에이전트를 통해 해당 공격과 관련되어 있는 정보들을 탐색하도록 구성할 수 있습니다. 이 실습에서는 Inspector 에서 발견한 사항들을 Security Hub 에서 모니터링 및 관리하는 내용을 살펴보도록 하겠습니다. 우리는 EC2 인스턴스의 SSH 관련 설정이 모범 사례를 따르고 있는지를 확인할 예정입니다.\n AWS Security Hub Console 에 접속합니다.\n 좌측의 \u0026ldquo;분석 결과\u0026rdquo; 메뉴를 클릭합니다.(위 링크를 클릭한 경우 \u0026ldquo;분석 결과\u0026rdquo; 메뉴로 자동접속 됩니다.)  검색창의 \u0026ldquo;필터 추가\u0026rdquo; 부분을 클릭한 후 \u0026ldquo;제품 이름\u0026rdquo; 을 선택한 후 입력창에 \u0026ldquo;Inspector\u0026rdquo; 를 입력하고 \u0026ldquo;Apply\u0026rdquo; 버튼을 클릭합니다.  브라우저의 검색 기능 (Control + F) 을 이용하여 \u0026ldquo;password authentication over SSH\u0026rdquo; 를 검색합니다. 페이지의 첫번째 화면에 검색 내용이 없는 경우 \u0026ldquo;\u0026gt;\u0026rdquo; 버튼을 이용하여 다음 페이지에서 검색하시기 바랍니다.\n  SSH 및 패스워드 인증과 관련한 탐지 내역을 클릭합니다. password authentication over SSH 과 관련한 취약점을 Inspector 가 발견한 것으로 미루어 해당 EC2 인스턴스에 Password 기반 인증 기능이 활성화되어 있는 것으로 판단됩니다. Password 에 기반한 인증은 SSH Key Pair 기반의 인증보다 보안위 취약하기 때문에 비활성화하는 것을 권고합니다.\n   공격자가 EC2 인스턴스에 접속이 가능했었는지 확인(CloudWatch Logs)  AWS CloudWatch Console 에 접속합니다.\n 좌측의 \u0026ldquo;로그 그룹\u0026rdquo; 메뉴를 클릭합니다.(위 링크를 클릭한 경우 \u0026ldquo;로그 그룹\u0026rdquo; 메뉴로 자동접속 됩니다.)  /threat-detection-wksp/var/log/secure 로그 그룹을 선택합니다.  로그 그룹을 클릭하면 여러개의 로그 스트림이 있는 것을 확인할 수 있습니다. 이전 과정에서 복사해 두었던 인스턴스 ID 에 해당하는 로그 스트림을 찾아서 클릭합니다.  \u0026ldquo;이벤트 필터링\u0026rdquo; 부분에 아래의 필터 조건을 입력합니다.\n[Mon, day, timestamp, ip, id, msg1= Invalid, msg2 = user, ...]  아래와 같이 필터 적용 후 결과를 확인합니다. 필터를 적용 후 확인해보면 다수의 SSH 접속 시도가 있었음을 확인할 수 있습니다. 즉, 해당 인스턴스에 대해 Brute Force 공격이 있었음을 확인할 수 있습니다.\n  이번에는 아래와 같이 약간 수정된 이벤트 필터를 적용합니다.\n[Mon, day, timestamp, ip, id, msg1= Accepted, msg2 = password, ...]  아래와 같이 필터 적용 후 결과를 확인합니다. 이번에는 SSH 접근이 허용된 로그들을 확인할 수 있습니다. 즉, 공격자가 Brute Force 공격을 통해 해당 인스턴스에 정상적으로 접속하였음을 확인할 수 있습니다.\n   EC2 보안 그룹 설정 변경  AWS EC2 Console 에 접속합니다.\n threat-detection-wksp: Compromised Instance 라는 이름의 EC2 인스턴스를 선택합니다.  화면 하단의 \u0026ldquo;설명\u0026rdquo; 탭에서 해당 인스턴스가 사용중인 보안그룹을 선택합니다.  \u0026ldquo;인바운드\u0026rdquo; 탭을 선택한 후 \u0026ldquo;편집\u0026rdquo; 버튼을 클릭합니다.  인바운드 SSH 규칙을 삭제한 후 \u0026ldquo;저장\u0026rdquo; 버튼을 클릭합니다.   Brute Force 공격을 통해 침해되었던 EC2 인스턴스에 할당되어 있던 인바운드 SSH 규칙이 삭제되었기 때문에 이제 외부에서 EC2 인스턴스로의 SSH Brute Force 공격 시도는 원천 차단되었습니다.\n   아래는 침해 사고 분석 결과가 반영된 공격 분석 및 대응 입니다.   "
},
{
	"uri": "/attack.html",
	"title": "공격",
	"tags": [],
	"description": "",
	"content": " CloudFormation 을 통해 생성된 공격자 인스턴스를 이용하여 공격을 실습해보도록 하겠습니다.\n "
},
{
	"uri": "/mitigation/module3.html",
	"title": "토의",
	"tags": [],
	"description": "",
	"content": "  이번에는 이전 과정을 통해 실행된 공격을 AWS 보안 서비스를 이용하여 탐지하고 분석하는 내용을 다뤄보도록 하겠습니다.\n 소요 시간  리뷰 및 토론 – 10 분 질의 응답 - 10 분  전체 실습 리뷰 1. CloudFormation  첫번째 CloudFormation 을 통해 탐지 및 분석의 토대가 되는 환경을 구성하였습니다. 또한 준비 과정에서 GuardDuty 와 Security Hub 를 활성화함으로써 위협이나 침입이 발생하였을 경우 탐지할 수 있는 준비를 하였습니다. 두번째 CloudFormation 을 통해 2개의 EC2 인스턴스가 생성되었었습니다. 1개의 인스턴스는 공격자용도로 생성된 Malicous Host 였으며 다른 하나의 인스턴스는 침해당한 EC2 용도의 Compromized Host 였습니다. 또한, Malicious Host 가 인터넷을 사용하기 위해 사용한 Elastic IP 는 GuardDuty 의 Custom Threat IP 리스트에 등록이 되어 있었던 상태입니다.\n AWS 에서는 EC2 인스턴스 생성 시 Key Pair 기반의 SSH 접속 방식을 기본값으로 제공하고 있지만 일부 기업이나 조직의 경우 SSH Key Pair 관리의 불편함 등을 이유로 SSH Key Pair 기반이 아닌 암호 기반 SSH 접속을 수동으로 활성화하여 사용하고 있기도 합니다. 이런 인증 방식의 인스턴스는 Brute Force 공격에 취약하며 이와 같은 공격을 GuardDuty 를 통해 탐지하고 탐지된 정보를 이용해서 Inspector 가 해당 인스턴스를 스캔하도록 구성하였습니다.  2. 공격  공격자의 공격은 BruteForce 공격을 통해 인스턴스가 침해되고 자격증명이 침해되는 것을 가정하여 진행되었습니다.  3. 탐지 및 분석  실제 고객이 사용할 수 있는 탐지 및 분석 솔루션은 다양하겠지만 이 실습에서는 GuardDuty 를 통해 1차 위협을 탐지하고 Security Hub 및 Inspector 와 같은 보안 서비스를 통해 좀 더 자동화된 분석 작업을 수행하도록 구성하였습니다. 탐지된 위협에 대한 분석은 CloudWatch Insight 나 CloudTrail 혹은 ElasticSearch 와 같은 서비스 등을 통하여 수행될 수 있습니다.  Quick Questions 정답을 보시려면 \u0026ldquo;\u0026gt;\u0026rdquo; 로 시작하는 질문을 클릭하시면 됩니다.\n   계정 침해 실습에서 공격자가 사용한 AWS 자격증명의 유형은 무엇인가요?   IAM Role 에서 사용하는 임시보안자격증명!     인스턴스 침해 대응에서 Security Gruop 의 SSH 관련 정책을 삭제하여도 관리자가 외부에서 접근이 가능한 이유는?   Systems Manager 의 Session Manager 는 Systems Manager Agent 를 이용하여 SSH 접속 환경을 제공합니다!     AWS 의 다양한 보안 솔루션과 3rd 보안 솔루션을 통합하여 모니터링하고 경보를 발생하도록 구성할 수 있는 AWS 서비스는?   AWS Security Hub!   "
},
{
	"uri": "/pre/module2.html",
	"title": "환경 구성 및 설정",
	"tags": [],
	"description": "",
	"content": "  이제 본격적으로 앞으로 진행할 실습의 초기 환경을 구성하게 됩니다. 여러분들은 앞으로 실습에 필요한 AWS 리소스를 자동으로 생성해 주는 2개의 CloudFormation템플릿을 실행하게 되며, 나머지 추가작업들은 본 가이드의 지침에 따라 직접 수행하게 될 것입니다.\n 소요 시간  첫번째 CloudFormation 템플릿의 내용을 살펴보고 실행하기 – 5 분 SNS 구독 확인 - 1 분 CloudWatch Rule 생성 - 5분 탐지 기능 활성화 – 5 분  본 실습의 모든 과정은 서울 리전에서 이루어집니다. 원활한 실습 진행을 위해서 반드시 서울 리전이 선택되었는지를 확인하시기 바랍니다.\n 1. CloudFormation 템플릿 실행 CloudFormation은 템플릿 파일 (json, yml)에 EC2 인스턴스, 네트워크 구성 등의 클라우드 인프라 리소스를 모델링하고 클라우드 환경에서 프로비저닝할 수 있는 서비스입니다.\n CloudFormation 을 실행하기 전에 CloudFormation Code 를 확인하고 싶으시면 여기를 클릭하시면 됩니다..\n  CloudFormation 템플릿을 실행하기 위해 Deploy to AWS 링크를 클릭합니다.\n   Region Deploy     Seoul     \u0026ldquo;Deploy to AWS\u0026rdquo; 를 클릭하면 브라우져에서 새로운 창이나 새로운 탭이 열리면서 CloudFormation 을 실행할 수 있는 AWS Console 화면으로 자동 접속되게 됩니다.  아래의 \u0026ldquo;스택 세부 정보 지정\u0026rdquo; 설정 화면에서 CloudFormation 스택의 이름을 확인하고(수정하셔도 됩니다.) \u0026ldquo;Email Address\u0026rdquo; 부분에 SNS 알람 이메일을 수신할 메일 주소를 입력하시기 바랍니다. E-mail 주소를 입력하지 않고 진행하는 경우 스택 생성 시작 후 에러와 함께 스택 생성이 진행되지 않으므로 반드시 E-mail 주소를 입력하시기 바랍니다.\n 다음 단계 진행을 위하여 화면 하단의 \u0026ldquo;다음\u0026rdquo; 버튼을 클릭하여 상세 설정 화면으로 이동합니다.\n \u0026ldquo;스택 생성\u0026rdquo; 버튼을 클릭하면 아래와 같은 화면이 나타나게 됩니다. Tag 값을 설정하시려면 원하는 Tag 값을 입력하시고 Tag 가 필요없는 경우 \u0026ldquo;다음\u0026rdquo; 버튼을 클릭합니다.  다음 화면에서 스택 생성을 위하여 사용된 템플릿의 설정값을 확인한 후 화면 하단에 있는 IAM 리소스 생성 권한 승인 항목을 체크한 후 \u0026ldquo;스택 생성\u0026rdquo; 버튼을 클릭합니다.  정상적으로 진행이 되는 경우 아래와 같이 스택의 상태가 \u0026ldquo;CREATE_COMPLETE)으로 되어 있는 것을 확인하실 수 있습니다.   2. SNS 구독 확인  이전 단계의 CloudFormation 이 실행되면 여러분들이 등록한 Email 주소로 SNS 토픽에 대한 구독 설정을 하게됩니다. 따라서, 이와 관련한 메일이 여러분들의 Email 주소로 발송되게 되는데 해당 SNS 구독을 확인하기 위하여 아래와 같이 SNS 구독 이메일이 수신되었다면 구독 확인(Confirm Subscription) 링크를 클릭해주시기 바랍니다.  구독이 정상적으로 완료되면 아래와 같은 페이지로 리다이렉트 되는 것을 확인하실 수 있습니다. 이 실습에 사용된 스택은 AWS 보안 서비스의 탐지 기능들을 테스트하기 위하여 교육용으로 작성된 것으로 실제 서비스 환경에서는 사용하시면 안됩니다.\n   3. CloudWatch 이벤트 규칙 설정 조금 전 실행한 CloudFormation 템플릿은 경보 발생을 위한 몇 개의 CloudWatch 이벤트 규칙들을 생성하였습니다. 이 단계에서는 템플릿이 자동으로 생성한 CloudWatch 이벤트 규칙에 추가적으로 하나의 이벤트 규칙을 더 생성하여 탐지 제어에 필요한 이벤트 규칙 생성을 마무리짓도록 하겠습니다. 이 규칙을 생성하고 나면 여러분은 탐지된 위협을 바탕으로 AWS Lambda 함수와 연계된 이메일 알람을 받을 수 있게 됩니다.\n아래의 순서에 따라 CloudWatch 이벤트 규칙을 생성하실 수 있으며 보다 자세한 GuardDuty 활용에 관련한 사항은 Amazon GuardDuty 문서에서 참고하실 수 있습니다.\n CloudWatch Console 화면에 접속합니다.\n 화면 좌측의 \u0026ldquo;이벤트\u0026rdquo; 하단의 \u0026ldquo;규칙\u0026rdquo; 을 클릭합니다.  \u0026ldquo;규칙 생성\u0026rdquo; 버튼을 클릭합니다.  \u0026ldquo;1단계: 규칙 생성\u0026rdquo; 화면에서 중앙의 \u0026ldquo;서비스별 이벤트와 일치시킬 이벤트 패턴을 생성\u0026rdquo; 메뉴를 클릭한 후 \u0026ldquo;사용자 지정 이벤트 패턴 생성\u0026rdquo; 을 선택합니다.  아래의 사용자 지정 이벤트 패턴을 복사한 후 붙여넣기를 합니다.\n\t{ \u0026quot;source\u0026quot;: [ \u0026quot;aws.guardduty\u0026quot; ], \u0026quot;detail\u0026quot;: { \u0026quot;type\u0026quot;: [ \u0026quot;UnauthorizedAccess:EC2/MaliciousIPCaller.Custom\u0026quot; ] } }  대상 지정을 위해 \u0026ldquo;대상 추가\u0026rdquo; 를 클릭한 후 \u0026ldquo;Lambda 함수\u0026rdquo; 가 선택된 상태에서 \u0026ldquo;threat-detection-wksp-remediation-nacl\u0026rdquo; 를 선택합니다. 상세 정보 설정을 위하여 \u0026ldquo;세부 정보 구성\u0026rdquo; 버튼을 클릭합니다.  \u0026ldquo;2단계: 규칙 세부 정보 구성\u0026rdquo; 화면에서 아래와 같이 값을 입력합니다.\n이름 : threat-detection-wksp-guardduty-finding-ec2-maliciousip\n설명 : GuardDuty Finding: UnauthorizedAccess:EC2/MaliciousIPCaller.Custom 여유가 있으시다면 Lambda 화면에 접속하여 CloudFormation 이 생성한 Lambda 함수를 확인한 후 해당 Lambda 함수가 제공하는 기능에 대해 살펴보셔도 좋습니다.\n   3. 보안 서비스 활성화 1. Amazon GuardDuty 활성화 1.1 GuardDuty 활성화를 위하여 AWS Console 에서 GuardDuty 메뉴로 이동합니다. 아래와 같은 GuardDuty 시작화면에서 \u0026ldquo;시작하기\u0026rdquo; 버튼을 클릭합니다. 1.2 다음 화면에서 \u0026ldquo;GuardDuty 활성화\u0026rdquo; 버튼을 클릭합니다. 2. AWS Security Hub 활성화 2.1 Security Hub 활성화를 위하여 AWS Console 에서 Security Hub 메뉴로 이동합니다. 아래와 같은 Security Hub 시작화면에서 \u0026ldquo;Security Hub로 이동\u0026rdquo; 버튼을 클릭합니다. 2.2 다음 화면에서 \u0026ldquo;Security Hub 활성화\u0026rdquo; 버튼을 클릭합니다. Security Hub 의 경우 활성화 이전에 발생된 탐지 내역에 대해서는 정보를 제공하지 않습니다. 따라서, 실습이 진행되는 중반 이후에 Security Hub 를 활성화하게 되면 GuardDuty 나 Inspector 가 Security Hub 활성화 시점 전에 탐지한 내역에 대해서는 모니터링이 불가능하므로 반드시 이 단계에서 Security Hub 를 활성화한 후 다음 단계를 진행하시기 바랍니다.\n "
},
{
	"uri": "/mitigation.html",
	"title": "탐지 및 분석",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/post.html",
	"title": "실습 구성 요소 삭제",
	"tags": [],
	"description": "",
	"content": "수고하셨습니다!!.\n마지막으로 실습에 사용된 AWS 자원들을 삭제하는 시간입니다.\n  Report an issue   Learn more  "
},
{
	"uri": "/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]